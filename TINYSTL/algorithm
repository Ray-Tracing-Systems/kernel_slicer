#pragma once
#include <vector>
#include <cmath>

namespace std
{
  template<class X>
  typename vector<X>::iterator back_inserter(vector<X>& vec);

  template< class Iter, class P >
  void copy_if(Iter begin, Iter end, Iter begin2, P predicate) {}
  
  template< class T > void swap( T& a, T& b ){}

  template<class It, class CmpOp>
  void sort(It a_beg, It a_end, CmpOp compareOp) {}

  template<class It>
  void reverse(It a_beg, It a_end) {}
};
